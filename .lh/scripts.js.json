{
    "sourceFile": "scripts.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1680581677905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1680581822976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,34 @@\n-document.addEventListener('DOMContentLoaded', function() { //Adds the event listener that waits for site to load before executing the function\r\n-  const save = document.getElementById('saveButton'); //The Save Button\r\n-  const nameInput = document.getElementById('name'); //The \"Name\" form\r\n-  const ingredientsInput = document.getElementById('ingredients'); //The \"Ingredients\" form\r\n-  const instructionsInput = document.getElementById('instructions'); //The \"Instructions\" form\r\n-  const recipeList = document.getElementById('list'); //The place where your recipes save when you hit the \"Save Button\"\r\n+document.addEventListener('DOMContentLoaded', function() {\r\n+  const save = document.getElementById('saveButton');\r\n+  const nameInput = document.getElementById('name');\r\n+  const ingredientsInput = document.getElementById('ingredients');\r\n+  const instructionsInput = document.getElementById('instructions');\r\n+  const recipeList = document.getElementById('list');\r\n \r\n-  save.addEventListener('click', function() { //Adds the event listener to the Save button, listens for a \"click\"\r\n-      const name = nameInput.value; //Gets the value that was put into the \"Name\" form\r\n-      const ingredients = ingredientsInput.value; //Gets the value that was put into the \"Ingredients\" form\r\n-      const instructions = instructionsInput.value; //Gets the value that was put into the \"Instructions\" form\r\n+  save.addEventListener('click', function() {\r\n+    const name = nameInput.value;\r\n+    const ingredients = ingredientsInput.value;\r\n+    const instructions = instructionsInput.value;\r\n \r\n-      const recipe = document.createElement('div'); //Creating a recipe \"container\" using a div tag\r\n-      const recipeName = document.createElement('h2'); //Takes the \"name\" element and puts it in the recipe container as an h2\r\n-      const recipeIngredients = document.createElement('p'); //Takes the \"ingredients\" element and puts it in the recipe container as an p\r\n-      const recipeInstructions = document.createElement('p'); //Takes the \"instructions\" element and puts it in the recipe container as an p\r\n-      const recipeLine = document.createElement('div'); //Creates a div element for the recipe-line\r\n-      recipeLine.classList.add('recipe-line'); //Adds the recipe-line class to the div element\r\n+    const recipe = document.createElement('div');\r\n+    const recipeName = document.createElement('h2');\r\n+    const recipeIngredients = document.createElement('p');\r\n+    const recipeInstructions = document.createElement('p');\r\n+    const recipeLine = document.createElement('div');\r\n \r\n-      recipeName.innerText = name; //Populates the \"recipeName\" element with the value of the \"name\" element\r\n-      recipeIngredients.innerText = `Ingredients: ${ingredients}`; //Populates the \"recipeIngredients\" element with all the strings in the \"ingredients\" element\r\n-      recipeInstructions.innerText = `Instructions: ${instructions}`; //Populates the \"recipeInstructions\" element with all the strings in the \"instructions\" element\r\n+    recipeLine.classList.add('recipe-line');\r\n+    recipe.appendChild(recipeLine);\r\n \r\n-      recipe.appendChild(recipeName); //These 3 lines add \"recipeName\" \"recipeIngredients\" and \"recipeInstructions\" of the recipe doc\r\n-      recipe.appendChild(recipeIngredients);\r\n-      recipe.appendChild(recipeInstructions);\r\n-      recipe.appendChild(recipeLine); //Appends the recipe-line to the recipe container\r\n+    recipeName.innerText = name;\r\n+    recipeIngredients.innerText = `Ingredients: ${ingredients}`;\r\n+    recipeInstructions.innerText = `Instructions: ${instructions}`;\r\n \r\n-      recipeList.appendChild(recipe); //Sets the \"recipe\" as a child of the \"recipeList\" - Causes each \"recipe\" to display in the \"recipeList\"\r\n+    recipe.appendChild(recipeName);\r\n+    recipe.appendChild(recipeIngredients);\r\n+    recipe.appendChild(recipeInstructions);\r\n+\r\n+    recipeList.appendChild(recipe);\r\n+\r\n+    recipeLine.style.display = 'block';\r\n   });\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1681072766822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,31 @@\n     const name = nameInput.value;\r\n     const ingredients = ingredientsInput.value;\r\n     const instructions = instructionsInput.value;\r\n \r\n+    // check if recipe already exists in recipe list\r\n+    const existingRecipes = recipeList.querySelectorAll('.recipe');\r\n+    let alreadyExists = false;\r\n+    existingRecipes.forEach(existingRecipe => {\r\n+      if (existingRecipe.querySelector('h2').textContent === name &&\r\n+          existingRecipe.querySelector('.ingredients').textContent === `Ingredients: ${ingredients}` &&\r\n+          existingRecipe.querySelector('.instructions').textContent === `Instructions: ${instructions}`) {\r\n+        alreadyExists = true;\r\n+        return;\r\n+      }\r\n+    });\r\n+\r\n+    if (alreadyExists) {\r\n+      alert('This recipe is already in the list.');\r\n+      return;\r\n+    }\r\n+\r\n     const recipe = document.createElement('div');\r\n     const recipeName = document.createElement('h2');\r\n     const recipeIngredients = document.createElement('p');\r\n+    recipeIngredients.classList.add('ingredients');\r\n     const recipeInstructions = document.createElement('p');\r\n+    recipeInstructions.classList.add('instructions');\r\n     const recipeLine = document.createElement('div');\r\n \r\n     recipeLine.classList.add('recipe-line');\r\n     recipe.appendChild(recipeLine);\r\n@@ -29,6 +48,11 @@\n \r\n     recipeList.appendChild(recipe);\r\n \r\n     recipeLine.style.display = 'block';\r\n+\r\n+    // clear input fields\r\n\\ No newline at end of file\n+    nameInput.value = '';\r\n+    ingredientsInput.value = '';\r\n+    instructionsInput.value = '';\r\n   });\r\n-});\n+});\r\n"
                },
                {
                    "date": 1681169253476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,18 +10,18 @@\n     const ingredients = ingredientsInput.value;\r\n     const instructions = instructionsInput.value;\r\n \r\n     // check if recipe already exists in recipe list\r\n-    const existingRecipes = recipeList.querySelectorAll('.recipe');\r\n-    let alreadyExists = false;\r\n-    existingRecipes.forEach(existingRecipe => {\r\n-      if (existingRecipe.querySelector('h2').textContent === name &&\r\n-          existingRecipe.querySelector('.ingredients').textContent === `Ingredients: ${ingredients}` &&\r\n-          existingRecipe.querySelector('.instructions').textContent === `Instructions: ${instructions}`) {\r\n-        alreadyExists = true;\r\n-        return;\r\n-      }\r\n-    });\r\n+    // const existingRecipes = recipeList.querySelectorAll('.recipe');\r\n+    // let alreadyExists = false;\r\n+    // existingRecipes.forEach(existingRecipe => {\r\n+    //   if (existingRecipe.querySelector('h2').textContent === name &&\r\n+    //       existingRecipe.querySelector('.ingredients').textContent === `Ingredients: ${ingredients}` &&\r\n+    //       existingRecipe.querySelector('.instructions').textContent === `Instructions: ${instructions}`) {\r\n+    //     alreadyExists = true;\r\n+    //     return;\r\n+    //   }\r\n+    // });\r\n \r\n     if (alreadyExists) {\r\n       alert('This recipe is already in the list.');\r\n       return;\r\n@@ -54,5 +54,5 @@\n     nameInput.value = '';\r\n     ingredientsInput.value = '';\r\n     instructionsInput.value = '';\r\n   });\r\n-});\n\\ No newline at end of file\n+});\r\n"
                },
                {
                    "date": 1681169400319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,31 +9,12 @@\n     const name = nameInput.value;\r\n     const ingredients = ingredientsInput.value;\r\n     const instructions = instructionsInput.value;\r\n \r\n-    // check if recipe already exists in recipe list\r\n-    // const existingRecipes = recipeList.querySelectorAll('.recipe');\r\n-    // let alreadyExists = false;\r\n-    // existingRecipes.forEach(existingRecipe => {\r\n-    //   if (existingRecipe.querySelector('h2').textContent === name &&\r\n-    //       existingRecipe.querySelector('.ingredients').textContent === `Ingredients: ${ingredients}` &&\r\n-    //       existingRecipe.querySelector('.instructions').textContent === `Instructions: ${instructions}`) {\r\n-    //     alreadyExists = true;\r\n-    //     return;\r\n-    //   }\r\n-    // });\r\n-\r\n-    if (alreadyExists) {\r\n-      alert('This recipe is already in the list.');\r\n-      return;\r\n-    }\r\n-\r\n     const recipe = document.createElement('div');\r\n     const recipeName = document.createElement('h2');\r\n     const recipeIngredients = document.createElement('p');\r\n-    recipeIngredients.classList.add('ingredients');\r\n     const recipeInstructions = document.createElement('p');\r\n-    recipeInstructions.classList.add('instructions');\r\n     const recipeLine = document.createElement('div');\r\n \r\n     recipeLine.classList.add('recipe-line');\r\n     recipe.appendChild(recipeLine);\r\n@@ -48,11 +29,6 @@\n \r\n     recipeList.appendChild(recipe);\r\n \r\n     recipeLine.style.display = 'block';\r\n-\r\n-    // clear input fields\r\n-    nameInput.value = '';\r\n-    ingredientsInput.value = '';\r\n-    instructionsInput.value = '';\r\n   });\r\n });\r\n"
                },
                {
                    "date": 1681169446247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,6 +29,10 @@\n \r\n     recipeList.appendChild(recipe);\r\n \r\n     recipeLine.style.display = 'block';\r\n+\r\n+    nameInput.value = '';\r\n+    ingredientsInput.value = '';\r\n+    instructionsInput.value = '';\r\n   });\r\n });\r\n"
                },
                {
                    "date": 1681170585743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +1,68 @@\n+// This waits for the page to fully load before executing any JavaScript code.\r\n document.addEventListener('DOMContentLoaded', function() {\r\n+\r\n+  // This selects the \"Save\" button and assigns it to the \"save\" variable.\r\n   const save = document.getElementById('saveButton');\r\n+\r\n+  // These select the input fields for the recipe name, ingredients, and instructions.\r\n   const nameInput = document.getElementById('name');\r\n   const ingredientsInput = document.getElementById('ingredients');\r\n   const instructionsInput = document.getElementById('instructions');\r\n-  const recipeList = document.getElementById('list');\r\n \r\n+  // This selects the recipe list container.\r\n+  const recipeList = document.getElementById('recipe-list');\r\n+\r\n+  // This adds an event listener to the \"Save\" button that will execute the following code when clicked.\r\n   save.addEventListener('click', function() {\r\n+\r\n+    // These get the values from the input fields.\r\n     const name = nameInput.value;\r\n     const ingredients = ingredientsInput.value;\r\n     const instructions = instructionsInput.value;\r\n \r\n+    // These create new elements for the recipe name, ingredients, and instructions.\r\n     const recipe = document.createElement('div');\r\n     const recipeName = document.createElement('h2');\r\n     const recipeIngredients = document.createElement('p');\r\n     const recipeInstructions = document.createElement('p');\r\n     const recipeLine = document.createElement('div');\r\n \r\n+    // This adds a class to the recipe line element.\r\n     recipeLine.classList.add('recipe-line');\r\n+\r\n+    // This appends the recipe line element to the recipe element.\r\n     recipe.appendChild(recipeLine);\r\n \r\n+    // This sets the text content for the recipe name, ingredients, and instructions.\r\n     recipeName.innerText = name;\r\n     recipeIngredients.innerText = `Ingredients: ${ingredients}`;\r\n     recipeInstructions.innerText = `Instructions: ${instructions}`;\r\n \r\n+    // These append the recipe name, ingredients, and instructions elements to the recipe element.\r\n     recipe.appendChild(recipeName);\r\n     recipe.appendChild(recipeIngredients);\r\n     recipe.appendChild(recipeInstructions);\r\n \r\n+    // This appends the recipe element to the recipe list container.\r\n     recipeList.appendChild(recipe);\r\n \r\n+    // This sets the display property of the recipe line to \"block\".\r\n     recipeLine.style.display = 'block';\r\n \r\n+    // These clear the input fields.\r\n     nameInput.value = '';\r\n     ingredientsInput.value = '';\r\n     instructionsInput.value = '';\r\n   });\r\n-});\r\n+\r\n+  // This selects the \"Print\" button and assigns it to the \"printButton\" variable.\r\n+  const printButton = document.getElementById('printButton');\r\n+\r\n+  // This adds an event listener to the \"Print\" button that will execute the following code when clicked.\r\n+  printButton.addEventListener('click', function() {\r\n+\r\n+    // This triggers the print dialog.\r\n+    window.print();\r\n+  });\r\n+\r\n+});\n\\ No newline at end of file\n"
                }
            ],
            "date": 1680581677905,
            "name": "Commit-0",
            "content": "document.addEventListener('DOMContentLoaded', function() { //Adds the event listener that waits for site to load before executing the function\r\n  const save = document.getElementById('saveButton'); //The Save Button\r\n  const nameInput = document.getElementById('name'); //The \"Name\" form\r\n  const ingredientsInput = document.getElementById('ingredients'); //The \"Ingredients\" form\r\n  const instructionsInput = document.getElementById('instructions'); //The \"Instructions\" form\r\n  const recipeList = document.getElementById('list'); //The place where your recipes save when you hit the \"Save Button\"\r\n\r\n  save.addEventListener('click', function() { //Adds the event listener to the Save button, listens for a \"click\"\r\n      const name = nameInput.value; //Gets the value that was put into the \"Name\" form\r\n      const ingredients = ingredientsInput.value; //Gets the value that was put into the \"Ingredients\" form\r\n      const instructions = instructionsInput.value; //Gets the value that was put into the \"Instructions\" form\r\n\r\n      const recipe = document.createElement('div'); //Creating a recipe \"container\" using a div tag\r\n      const recipeName = document.createElement('h2'); //Takes the \"name\" element and puts it in the recipe container as an h2\r\n      const recipeIngredients = document.createElement('p'); //Takes the \"ingredients\" element and puts it in the recipe container as an p\r\n      const recipeInstructions = document.createElement('p'); //Takes the \"instructions\" element and puts it in the recipe container as an p\r\n      const recipeLine = document.createElement('div'); //Creates a div element for the recipe-line\r\n      recipeLine.classList.add('recipe-line'); //Adds the recipe-line class to the div element\r\n\r\n      recipeName.innerText = name; //Populates the \"recipeName\" element with the value of the \"name\" element\r\n      recipeIngredients.innerText = `Ingredients: ${ingredients}`; //Populates the \"recipeIngredients\" element with all the strings in the \"ingredients\" element\r\n      recipeInstructions.innerText = `Instructions: ${instructions}`; //Populates the \"recipeInstructions\" element with all the strings in the \"instructions\" element\r\n\r\n      recipe.appendChild(recipeName); //These 3 lines add \"recipeName\" \"recipeIngredients\" and \"recipeInstructions\" of the recipe doc\r\n      recipe.appendChild(recipeIngredients);\r\n      recipe.appendChild(recipeInstructions);\r\n      recipe.appendChild(recipeLine); //Appends the recipe-line to the recipe container\r\n\r\n      recipeList.appendChild(recipe); //Sets the \"recipe\" as a child of the \"recipeList\" - Causes each \"recipe\" to display in the \"recipeList\"\r\n  });\r\n});"
        }
    ]
}